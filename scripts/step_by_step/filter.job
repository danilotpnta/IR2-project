#!/bin/bash

#SBATCH --partition=gpu_h100
#SBATCH --gpus=1

#SBATCH --job-name=InPars-GEN
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=16
#SBATCH --time=00:59:00
#SBATCH --output=/scratch-shared/scur2850/logs/filter_%A.out

#SBATCH --ear=on
#SBATCH --ear-policy=monitoring
#SBATCH --ear-verbose=1

date
export HF_HOME="/scratch-shared/$USER"
export GPU_COUNT=$(nvidia-smi --list-gpus | wc -l)

# make sure the correct modules are used and that the virtual environment is active
PROJECT_ROOT=/home/$USER/IR2-project
source $PROJECT_ROOT/scripts/snellius_setup.sh
setup $PROJECT_ROOT
cd $PROJECT_ROOT

STEP_NAME=filter
# fill in template variables
LOG_PATH="/scratch-shared/scur2850/logs/$STEP_NAME"_"$SLURM_JOB_ID.out"
SCRIPT_PATH=$PROJECT_ROOT/scripts/step_by_step/$STEP_NAME.job

# NOTE: make sure this is consistent over all steps
RUN_NAME=InPars-TST
OUTPUT_DIR=/scratch-shared/scur2850/inpars/$RUN_NAME
mkdir -p $OUTPUT_DIR

# ___________________
# |    ARGUMENTS    |
# ___________________

DATASET=scifact # trec-covid
DATASET_SOURCE=ir_datasets # ir_datasets, pyserini
INPUT=$OUTPUT_DIR/$DATASET-queries.jsonl
OUTPUT=$OUTPUT_DIR/$DATASET-queries-filtered.jsonl

STRATEGY=scores # scores, reranker
KEEP_TOP_K=1 # paper used 1
RERANKER_MODEL=microsoft/deberta-v3-base # paper uses castorini/monot5-3b-msmarco-10k
MIN_TOKENS=3
MAX_TOKENS=1000
BATCH_SIZE=256
SEED=42
# Flags, choose one from each line. To disable, set "".
SKIP_QUESTIONS="" # --skip_questions_copied_from_context 
DTYPE=--fp16 # --bf16 --fp16, --int8 or ""

# __________________
# |      EXEC      |
# __________________

# rest of the script
srun python -m inpars.filter \
--input $INPUT \
--dataset $DATASET \
--dataset_source $DATASET_SOURCE \
--filter_strategy $STRATEGY \
--keep_top_k $KEEP_TOP_K \
--output $OUTPUT \
--model_name_or_path $RERANKER_MODEL \
--min_tokens $MIN_TOKENS \
--max_tokens $MAX_TOKENS \
--batch_size $BATCH_SIZE \
--seed $SEED \
$SKIP_QUESTIONS \
$DTYPE \

mkdir -p $OUTPUT_DIR/job_${STEP_NAME}_${SLURM_JOB_ID}
# copy the script and the logs to the output directory.
# This should be done regardless of the success of the job
echo "Copying logs and script to $OUTPUT_DIR/job_${STEP_NAME}_${SLURM_JOB_ID}"
cp $SCRIPT_PATH $LOG_PATH $OUTPUT_DIR/job_${STEP_NAME}_${SLURM_JOB_ID}
